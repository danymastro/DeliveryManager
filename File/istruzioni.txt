Nell'esercizio 1 della traccia che ho svolto in classe mi sono limitato  a spiegare le strutture dati che ora ti spieghero in manerià pseudo codice poi sei tuo che dovrai tradurre queste strutture in codice e fornire le corrette implementazioni.

struct ZonaLogistica{
  id -> viene creato al momento della creazione (identificativo di tipo intero)
  Nome -> stringa
  Punti_consegna -> array dinamico dove sono salvati tutti i punti di consegna
  
}

struct PuntoConsegna{
    id -> viene creato al momento della creazione(identificativo di tipo intero)
    ZonaLogistica -> puntatore alla zona logistica
    priorità -> intero per cui si associa ad ogni numero una priorità maggiore è il numero e maggiore è la priorità
    orario -> intero (es. 0830 -> 8:30....)
    tipo -> intero associo ad ogni numero una tipologia
    nodo -> puntatore del nodo del grafo 
    nome -> stringa
}

struct Missione{
    id -> viene creato al momento della creazione (identificativo di tipo intero)
    Veicolo -> puntatore al veicolo coinvolto
    status -> tipo intero a cui si associa ad ogni numero uno status
}

struct Veicolo {
    targa -> stringa identificativa
    capacità -> intero
    stato operativo -> intero
    lista_carichi -> puntatore all'array dinamico che contiene tutti i carichi e tramte le missioni si riesce a ricavare lo status
}

struc Carico {
    id -> intero
    peso -> intero
    tipologia -> intero
    destinazione -> puntatore al nodo del grafo del punto di consegna
    priorità -> intero
    missione -> puntatore alla missione
    centro_smistamento -> puntatore al nodo del grado del punto di smistamento
}

struct CentroSmistamento{
    id -> intero
    carichi_disponibili -> puntatore alla coda con priorità che contiene tutti i carichi disponibili
    nodo -> punatore al nodo del grado
}

struct DeliveryManager{
    area_metropolitana -> puntatore al grafo 
    missioni -> array dinamico che contiene tutte le missioni (sia completate che non)
    carichi -> array dinamico che contiene tutti i carichi (sia consegnati che non)
    veicoli -> arra dinamico che contiene tutti i veicoli registrati
}


Ovviamente a queste strutture dati aggiuntive che sono state create appositamente per risolvere il problema posto vanno condisderate le strutture dati base che sono essenziali al corretto funzionamento dell'ADT principale quali: grfo pesato, la coda e dynamic array. Ovviamente queste strutture dati andranno poi ad essere modificate per gestire le esigenze spefiche del problema posto (es. nel caso del centro di smistamento si dovrà utlizzare una coda che tiene conto delle varie priorità e quindi riordinare gli elementi al suo interno di conseguenza).
Per esempio un altro ADT da modificare e riadattare è il wieghted_directd_graph in modo tale che prevede il puntatore al nodo singolo.